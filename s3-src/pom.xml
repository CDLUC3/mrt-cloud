<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.cdlib.mrt</groupId>
    <artifactId>mrt-s3srcpub</artifactId>
    <packaging>jar</packaging>
    <version>4.0-SNAPSHOT</version>
    <name>UC3-mrtS3SrcPub</name>
    <url>http://uc3.cdlib.org</url>

    <distributionManagement>
      <repository>
        <id>cdlib-uc3-mrt-uc3-mrt-java</id>
        <name>cdlib-uc3-mrt-uc3-mrt-java</name>
        <url>https://cdlib-uc3-mrt-${env.AWS_ACCOUNT_ID}.d.codeartifact.us-west-2.amazonaws.com/maven/uc3-mrt-java/</url>
      </repository>
    </distributionManagement>

    <properties>
      <!--awsjavasdk.version>2.29.30</awsjavasdk.version-->
      <merritt-core.version>4.0-SNAPSHOT</merritt-core.version>
      <merritt-bom.version>4.0-SNAPSHOT</merritt-bom.version>
      <itDockerRegistry>it-docker-registry</itDockerRegistry>
      <docker.skip>${env.SKIP_DOCKER_TEST}</docker.skip>
      <skipTests>${env.SKIP_DOCKER_TEST}</skipTests>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.cdlib.mrt</groupId>
                <artifactId>mrt-reflectoring-bom</artifactId>
                <version>${merritt-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    
    <parent>
        <groupId>org.cdlib.mrt</groupId>
        <artifactId>mrt-parent-properties</artifactId>
        <!--This version cannot be set as a property-->
        <version>PAR-4.0-SNAPSHOT</version>
    </parent>

    <profiles>
        <profile>
            <id>aws</id>
            <activation>
                <property>
                    <name>env.ECR_REGISTRY</name>
                </property>
            </activation>
            <properties>
                <!-- Override only if necessary -->
                <itDockerRegistry>${env.ECR_REGISTRY}</itDockerRegistry>
            </properties>
        </profile>
    </profiles>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <compilerArgument>${compilerArgument}</compilerArgument>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker.maven.plugin.version}</version>
                <executions>
                    <execution>
                        <id>prepare-it-server</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <configuration>
                            <images>
                                <image>
                                    <name>${itDockerRegistry}/mrt-minio-it:dev</name>
                                    <alias>it-minio</alias>
                                    <run>
                                        <ports>
                                            <port>minio-server.port:9000</port>
                                            <port>minio-server.admin_port:9001</port>
                                        </ports>
                                        <wait>
                                            <time>2000</time>
                                        </wait>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </execution>
                    <execution>
                        <id>remove-it-server</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven.failsafe.plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <includes>
                        <include>**/*IT</include>
                    </includes>
                    <environmentVariables>
                        <minio-server.port>${minio-server.port}</minio-server.port>
                        <minio-server.admin_port>${minio-server.admin_port}</minio-server.admin_port>
                        <SSM_SKIP_RESOLUTION>Y</SSM_SKIP_RESOLUTION>
                    </environmentVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.plugin.version}</version>
                <configuration>
                    <!-- Includes Test* and *Test by default -->
                    <!-- skips surefire tests without skipping failsafe tests.
                             Property
                    value seems to magically default to false -->
                    <skipTests>${skip.surefire.tests}</skipTests>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.maven.plugin.version}</version>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven.javadoc.plugin.version}</version>
                <configuration>
                    <doclint>none</doclint>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        
        <dependency>
            <groupId>org.cdlib.mrt</groupId>
            <artifactId>mrt-cloudconf</artifactId>
            <version>${project.version}</version>
            <scope>runtime</scope>
        </dependency>
        
        <dependency>
            <groupId>org.cdlib.mrt</groupId>
            <artifactId>mrt-core</artifactId>
            <version>${merritt-core.version}</version>
        </dependency>

        <dependency>
            <groupId>org.cdlib.mrt</groupId>
            <artifactId>mrt-openstackpub</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>co.elastic.logging</groupId>
            <artifactId>ecs-logging-core</artifactId>
            <scope>runtime</scope>
        </dependency>
        
        <dependency>
            <groupId>co.elastic.logging</groupId>
            <artifactId>log4j2-ecs-layout</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-core</artifactId>
        </dependency>
        
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-s3</artifactId>
        </dependency>
        
        <dependency>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-databind</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
        </dependency>
        
        <dependency>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-core</artifactId>
          <scope>compile</scope>
        </dependency>
            
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
        </dependency>
        
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>aws-core</artifactId>
        </dependency>
        
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>aws-crt-client</artifactId>
        </dependency>
        
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>crt-core</artifactId>
        </dependency>

        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>http-client-spi</artifactId>
        </dependency>

        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>regions</artifactId>
        </dependency>

        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>sdk-core</artifactId>
        </dependency>

        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>ssm</artifactId>
        </dependency>

        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>s3</artifactId>
        </dependency>

        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>s3-transfer-manager</artifactId>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>transfer</artifactId>
            <scope>compile</scope>
        </dependency>

    </dependencies>

</project>